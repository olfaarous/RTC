/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const HmrRuntime = {
    Status: 'NGXS_HMR_LIFECYCLE_STATUS',
};
export { HmrRuntime };
/**
 * @record
 */
export function NgxsHmrSnapshot() { }
/**
 * @record
 * @template T
 */
export function NgxsHmrLifeCycle() { }
if (false) {
    /**
     * hmrNgxsStoreOnInit is called when the AppModule on init
     * @param {?} ctx - StateContext for the current app state from Store
     * @param {?} snapshot - previous state from Store after last hmr on destroy
     * @return {?}
     */
    NgxsHmrLifeCycle.prototype.hmrNgxsStoreOnInit = function (ctx, snapshot) { };
    /**
     * hmrNgxsStoreOnInit is called when the AppModule on destroy
     * @param {?} ctx - StateContext for the current app state from Store
     * @return {?}
     */
    NgxsHmrLifeCycle.prototype.hmrNgxsStoreBeforeOnDestroy = function (ctx) { };
}
/**
 * @record
 */
export function NgxsHmrOptions() { }
if (false) {
    /**
     * \@description
     * Clear logs after each refresh
     * (default: true)
     * @type {?|undefined}
     */
    NgxsHmrOptions.prototype.autoClearLogs;
    /**
     * \@description
     * Deferred time before loading the old state
     * (default: 100ms)
     * @type {?|undefined}
     */
    NgxsHmrOptions.prototype.deferTime;
}
/**
 * @record
 */
function WebpackHotModule() { }
if (false) {
    /** @type {?|undefined} */
    WebpackHotModule.prototype.hot;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ltYm9scy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL2htci1wbHVnaW4vIiwic291cmNlcyI6WyJzcmMvc3ltYm9scy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFJRSxRQUFTLDJCQUEyQjs7Ozs7O0FBR3RDLHFDQUVDOzs7OztBQUVELHNDQWFDOzs7Ozs7OztJQVBDLDZFQUFxRTs7Ozs7O0lBTXJFLDRFQUE4RDs7Ozs7QUFNaEUsb0NBY0M7Ozs7Ozs7O0lBUkMsdUNBQXdCOzs7Ozs7O0lBT3hCLG1DQUFtQjs7Ozs7QUFJckIsK0JBUUM7OztJQVBDLCtCQU1FIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhdGVDb250ZXh0IH0gZnJvbSAnQG5neHMvc3RvcmUnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVudW0gSG1yUnVudGltZSB7XHJcbiAgU3RhdHVzID0gJ05HWFNfSE1SX0xJRkVDWUNMRV9TVEFUVVMnXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmd4c0htclNuYXBzaG90IHtcclxuICBba2V5OiBzdHJpbmddOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmd4c0htckxpZmVDeWNsZTxUID0gTmd4c0htclNuYXBzaG90PiB7XHJcbiAgLyoqXHJcbiAgICogaG1yTmd4c1N0b3JlT25Jbml0IGlzIGNhbGxlZCB3aGVuIHRoZSBBcHBNb2R1bGUgb24gaW5pdFxyXG4gICAqIEBwYXJhbSBjdHggLSBTdGF0ZUNvbnRleHQgZm9yIHRoZSBjdXJyZW50IGFwcCBzdGF0ZSBmcm9tIFN0b3JlXHJcbiAgICogQHBhcmFtIHNuYXBzaG90IC0gcHJldmlvdXMgc3RhdGUgZnJvbSBTdG9yZSBhZnRlciBsYXN0IGhtciBvbiBkZXN0cm95XHJcbiAgICovXHJcbiAgaG1yTmd4c1N0b3JlT25Jbml0KGN0eDogU3RhdGVDb250ZXh0PFQ+LCBzbmFwc2hvdDogUGFydGlhbDxUPik6IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIGhtck5neHNTdG9yZU9uSW5pdCBpcyBjYWxsZWQgd2hlbiB0aGUgQXBwTW9kdWxlIG9uIGRlc3Ryb3lcclxuICAgKiBAcGFyYW0gY3R4IC0gU3RhdGVDb250ZXh0IGZvciB0aGUgY3VycmVudCBhcHAgc3RhdGUgZnJvbSBTdG9yZVxyXG4gICAqL1xyXG4gIGhtck5neHNTdG9yZUJlZm9yZU9uRGVzdHJveShjdHg6IFN0YXRlQ29udGV4dDxUPik6IFBhcnRpYWw8VD47XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEhtckNhbGxiYWNrPFQ+ID0gKGN0eDogU3RhdGVDb250ZXh0PFQ+LCBzdGF0ZTogUGFydGlhbDxUPikgPT4gdm9pZDtcclxuZXhwb3J0IHR5cGUgQm9vdHN0cmFwTW9kdWxlRm48VCA9IGFueT4gPSAoKSA9PiBQcm9taXNlPE5nTW9kdWxlUmVmPFQ+PjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmd4c0htck9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqIENsZWFyIGxvZ3MgYWZ0ZXIgZWFjaCByZWZyZXNoXHJcbiAgICogKGRlZmF1bHQ6IHRydWUpXHJcbiAgICovXHJcbiAgYXV0b0NsZWFyTG9ncz86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqIERlZmVycmVkIHRpbWUgYmVmb3JlIGxvYWRpbmcgdGhlIG9sZCBzdGF0ZVxyXG4gICAqIChkZWZhdWx0OiAxMDBtcylcclxuICAgKi9cclxuICBkZWZlclRpbWU/OiBudW1iZXI7XHJcbn1cclxuXHJcbnR5cGUgTW9kdWxlSWQgPSBzdHJpbmcgfCBudW1iZXI7XHJcbmludGVyZmFjZSBXZWJwYWNrSG90TW9kdWxlIHtcclxuICBob3Q/OiB7XHJcbiAgICBkYXRhOiBhbnk7XHJcbiAgICBhY2NlcHQoZGVwZW5kZW5jaWVzOiBzdHJpbmdbXSwgY2FsbGJhY2s/OiAodXBkYXRlZERlcGVuZGVuY2llczogTW9kdWxlSWRbXSkgPT4gdm9pZCk6IHZvaWQ7XHJcbiAgICBhY2NlcHQoZGVwZW5kZW5jeTogc3RyaW5nLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpOiB2b2lkO1xyXG4gICAgYWNjZXB0KGVyckhhbmRsZXI/OiAoZXJyOiBFcnJvcikgPT4gdm9pZCk6IHZvaWQ7XHJcbiAgICBkaXNwb3NlKGNhbGxiYWNrOiAoZGF0YTogYW55KSA9PiB2b2lkKTogdm9pZDtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIGFueSAtIGJlY2F1c2UgbmVlZCBzZXR1cFxyXG4gKiBucG0gaSBAdHlwZXMvd2VicGFjay1lbnZcclxuICovXHJcbmV4cG9ydCB0eXBlIFdlYnBhY2tNb2R1bGUgPSBXZWJwYWNrSG90TW9kdWxlIHwgYW55O1xyXG4iXX0=