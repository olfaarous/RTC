import { ElementRef, EventEmitter, IterableDiffers, KeyValueDiffers, NgZone } from '@angular/core';
import * as go from 'gojs';
export declare class DiagramComponent {
    private _differs;
    private _kvdiffers;
    zone: NgZone;
    /**
     * Diagram initialization function. Returns a go.Diagram.
     * Do not initialize model data in this function.
     */
    initDiagram: () => go.Diagram;
    nodeDataArray: Array<go.ObjectData>;
    linkDataArray: Array<go.ObjectData>;
    modelData: go.ObjectData;
    divClassName: string;
    modelChangedListener: (e: go.ChangedEvent) => void | null;
    modelChange: EventEmitter<go.IncrementalData>;
    diagramDiv: ElementRef;
    diagram: go.Diagram;
    private _ndaDiffer;
    private _ldaDiffer;
    private _mdDiffer;
    constructor(_differs: IterableDiffers, _kvdiffers: KeyValueDiffers, zone: NgZone);
    ngOnInit(): void;
    /**
     * Initializes diagram / model after view init
     */
    ngAfterViewInit(): void;
    /**
     * Always be checking if array Input data has changed (node and link data arrays)
     */
    ngDoCheck(): void;
    /**
     * Some input property has changed (or its contents changed) in parent component.
     * Update diagram data accordingly
     */
    updateFromAppData(): void;
}
